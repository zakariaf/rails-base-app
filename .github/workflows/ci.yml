name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.2 # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install Yarn
        run: |
          npm install yarn
          yarn --version
          yarn install

      - name: Prepare environment
        run: |
          bundle exec overcommit --sign
          bundle exec overcommit --sign pre-commit

      - name: Run all checks
        run: SKIP=AuthorName,AuthorEmail bundle exec overcommit --run

  rspec:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      DEVISE_JWT_SECRET_KEY: irrelevant
      POSTGRES_HOST: localhost
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: baseapp
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: baseapp_test
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.2 # Not needed .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install Yarn
        run: |
          npm install yarn
          yarn --version
          yarn install

      - name: Create DB
        run: bundle exec rails db:reset

      - name: Run tests
        run: bundle exec rspec
